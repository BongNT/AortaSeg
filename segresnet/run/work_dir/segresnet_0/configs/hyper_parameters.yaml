_meta_: {}
data_file_base_dir: /home/user/AortaSeg24/models/package/segresnet/run
skel_folder: "/home/user/AortaSeg24/datasets/skeletons"
bundle_root: $@data_file_base_dir + "/work_dir/segresnet_0"
ckpt_path: $@bundle_root + '/model'
data_list_file_path: $@data_file_base_dir + "/work_dir/data.json"
modality: ct
fold: 0
input_channels: 1
output_classes: 24
class_names: null
class_index: null
debug: false
ckpt_save: true
cache_rate: 1
roi_size: [160, 160, 256] #[160, 160, 256]
auto_scale_allowed: false
auto_scale_batch: false
auto_scale_roi: false
auto_scale_filters: false
quick: false
channels_last: true
validate_final_original_res: true
calc_val_loss: false
amp: true
log_output_file: null
cache_class_indices: null
early_stopping_fraction: 0
determ: false
learning_rate: 0.00015
batch_size: 1
num_images_per_batch: 1
num_epochs: 2000
num_warmup_epochs: 20
sigmoid: false
resample: false
resample_resolution: [1.0, 1.0, 1.0]
crop_mode: ratio
normalize_mode: zscore
intensity_bounds: [-25.025, 470.259375]
num_epochs_per_validation: 3000
num_epochs_per_saving: 1
num_workers: 8
num_steps_per_image: null
num_crops_per_image: 1
loss: {_target_: DiceCELoss, include_background: true, smooth_nr: 0, smooth_dr: 1.0e-05,
  squared_pred: true, softmax: $not @sigmoid, sigmoid: $@sigmoid, to_onehot_y: $not
    @sigmoid}
optimizer: {_target_: torch.optim.AdamW, lr: '@learning_rate', weight_decay: 1.0e-05}
network:
  _target_: SegResNetDS
  init_filters: 32
  blocks_down: [1, 2, 4, 5, 6]
  norm: INSTANCE_NVFUSER
  in_channels: '@input_channels'
  out_channels: '@output_classes'
  dsdepth: 4
finetune: {enabled: false, ckpt_name: $@bundle_root + '/model/model_final_copy.pt'}
validate: {enabled: false, ckpt_name: $@bundle_root + '/model/model.pt', output_path: $@bundle_root
    + '/prediction_validation', save_mask: false, invert: true}
infer: {enabled: false, ckpt_name: $@bundle_root + '/model/model.pt', output_path: $@bundle_root
    + '/prediction_' + @infer#data_list_key, data_list_key: testing}
anisotropic_scales: false
spacing_median: [1.0, 1.0, 1.0]
spacing_lower: [1.0, 1.0, 1.0]
spacing_upper: [1.0, 1.0, 1.0]
image_size_mm_median: [443.0, 443.0, 698.0]
image_size_mm_90: [498, 498, 750]
image_size: [498, 498, 750]
mgpu: {world_size: 2, rank: 0, global_rank: 0}
